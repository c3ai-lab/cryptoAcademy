version: "3.9"
services:
    nginx:
        container_name: nginx
        image: nginx:latest
        restart: unless-stopped
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - ./data/nginx:/etc/nginx/conf.d
            - ./data/certbot/conf:/etc/letsencrypt:ro
            - ./data/certbot/www:/var/www/certbot
        ports:
            - 80:80
            - 443:443
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    certbot:
        container_name: certbot
        image: certbot/certbot
        restart: unless-stopped
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    crypto-app:
        container_name: crypto-app
        restart: always
        image: mats9798/cryptocademy:latest
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - crypto_app_data:/var/www/html/storage
        environment:
            APP_ENV: production
            CONTAINER_ROLE: app
    scheduler:
        container_name: scheduler
        restart: always
        image: mats9798/cryptocademy:latest
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - crypto_app_data:/var/www/html/storage
        environment:
            APP_ENV: production
            CONTAINER_ROLE: scheduler

    crypto-app_db:
        container_name: crypto-app_db
        image: mysql:8
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: cryptocademy
            MYSQL_USER: cryptocademy
            MYSQL_PASSWORD: cryptocademy
        volumes:
            - crypto_mysql_data:/var/lib/mysql
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        restart: always
        depends_on:
            - crypto-app_db
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
        environment:
            - PMA_ABSOLUTE_URI=http://pma.developer.local
            - PMA_HOST=crypto-app_db
            - PMA_VERBOSE=CryptoAcademy
            - UPLOAD_LIMIT=2500M

#    mailserver:
#        image: docker.io/mailserver/docker-mailserver:latest
#        hostname: mail
#        domainname: cryptocademy.app
#        container_name: mailserver
#        dns:
#            - 8.8.8.8
#        volumes:
#            - crypto_maildata:/var/mail
#            - crypto_mailstate:/var/mail-state
#            - crypto_maillogs:/var/log/mail
#            - ./data/mailserver/config/:/tmp/docker-mailserver/
#            - ./data/certbot/conf:/etc/letsencrypt:ro
#            - /etc/localtime:/etc/localtime:ro
#            - /etc/timezone:/etc/timezone:ro
#        environment:
#            - PERMIT_DOCKER=host
#            - ONE_DIR=1
#            - DMS_DEBUG=0
#            - SMTP_ONLY=1
#            - SSL_TYPE=letsencrypt
#            - VIRTUAL_HOST=mail.cryptocademy.app
#            - LETSENCRYPT_HOST=mail.cryptocademy.app
#            - POSTMASTER_ADDRESS=magdalena.tsolaki@gmail.com
#            - ENABLE_UPDATE_CHECK=1
#            - UPDATE_CHECK_INTERVAL=1d
#        restart: always
#        cap_add:
#            - NET_ADMIN
#            - SYS_PTRACE
volumes:
    crypto_mysql_data:
        name: crypto_mysql_data
    crypto_app_data:
        name: crypto_app_data
#    crypto_maildata:
#        name: crypto_maildata
#    crypto_mailstate:
#        name: crypto_mailstate
#    crypto_maillogs:
#        name: crypto_maillogs

networks:
    default:
        name: crypto-net
        driver: bridge
